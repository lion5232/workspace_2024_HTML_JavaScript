VScode정렬 기능 : alt + shift + f 또는 ctrl + a , ctrl+ k+f

ecma 스크립트 표준에 따라서 만들어진 언어가 자바스크립트
이걸 쉽게 만든 라이브러리가 리액트
view.jsp

$.ajax => jQuery 
DOM (document...)

자바스크립트 - 언어가 아닌 하나의 기술 현재는 언어라고도 함
- 브라우저에서 파싱되어서 동작된다.

interpreter - 한줄씩 읽어서 실행한다. (자바를 실행할때)
컴파일 - 자바를 class파일로 변환할때

이에반해 자바스크립트 역시 인터프리터이다.
html과 css는 서버에서 처리하지 않고 그대로 브라우저에게 전송하면 브라우저가 위에서부터 읽는다.
이메일 형식 체크 비번 체크 - 자바스크립트의 표준에서 알아낼 수 있다.
"리액트는 버추얼 돔을 이용해서 브라우저에서 원하는 모양을 독립적으로 만들어서 서버에서 하지 않게 끔 해준다. "
하지만 자바스크립트는 서버에 요청에서 모양을 만들도록하니까 부하가 많이 걸린다.

카카오 api 데이터를 넘어오는것을 json으로 넘어온다.
함수 중에서 익명 함수란? -- 코드가 바로 실행된다고?
비동기로 ajax를 써서 코멘트 기능을 만들 수 있다. 콜백함수

ECMA 스크립트 : 
표준(standards) Json에 대한 표준 ECMA-404 
json = 키 : 벨류 형식

post라는 엔티티와 테이블 이름을 동일하게 만들면 동일하게 만들어진다.
 @column에다가 name을 지정해서 만들 수 있다.

비동기 vs 동기
자바 스크립트와 자바와는 서로 실행 불가 대신에 데이터를 json형태로 바꿔서
restAPI를 사용..
ECMA-262 : javascript의 표준


VSCODE 설치
extension  - liveServer(코트 바로보기- 자동 새로고침), CodeRunner(자동으로 원하는 형식의 컴파일)

자바스크립트 위치 body코드가 먼저 실행되고 스크립트가 뒤에 동작하므로 body 태그 뒤에 스크립트를 놓는게 좋다.
head태크 안에 놓으면 연산이 많이 필요한 경우 느리게 동작 될 수 있다. 그래서 body 태그 뒤에다가 놓는게 좋다.

브라우저와 관련된 객체(교재 610 페이지)
history (뒤로가기)
document(브라우저의 본문내용 body 태그)
navigator(주소창)

$("#demo").text(11);  == document.getElementById("demo").innerHTML= 5+6;


html 파일 생성: .html파일 생성 후 자동 완성은 페이지에 html을 치면 html: 5가 표시된 걸 클릭하면 기본적인 화면 작성됨.
port 번호 5500은 oracle이 쓰고 있어서 port 번호 바꿔야 함.
extension에 가서 LiveServer를 클릭 -> 톱니바퀴에서 설정 클릭 -> Live Server › Settings: Port를 클릭 ->"liveServer.settings.port": 포트번호, 문장에서 포트번호를 원하는 걸로 바꾸기.

javascript 실행시 node 하고 이상하게 깨지면 node.js를 설치해야 함. (https://clear-sky-sun.tistory.com/118) 참고

--------------------------------
백틱(backTick)

백틱(backtick)과 작은 따옴표의 차이
백틱(backtick)으로 열고 작은 따옴표로 닫는 표시를 해보면 아래와 같은 모습이 나타납니다.

처음 "value" 앞 백틱 기호부터 그 다음에 "value" 앞에 오는 백틱 기호까지 전체가 백틱이 적용되는 범위가 된 것을 볼 수 있습니다.
아래 이미지에서 볼 수 있듯, backtick은 작은 따옴표와 다르게 새로운 백틱 기호가 등장하기 전까지 전체를 백틱 기호가 적용되는 범위로 간주합니다. 작은 따옴표는 코드의 동일한 줄까지만 적용이 되지만, backtick은 줄구분과 관련 없이 적용됩니다. 이러한 특성으로 인해 backtick을 사용한 문자열에서는 별도의 코드를 입력하지 않아도 자체적으로 줄바꿈(개행)이 가능하다는 것을 확인할 수 있습니다.

즉 템플릿 리터럴
console.log(language + "처음이죠?" + "Hello World" + language + "참 쉽죠?");

문자열을 연결하고 출력하려면 따옴표와 더하기(+) 기호를 사용해 위와 같이 사용해야 했습니다.
템플릿 문자열에서는 ${}(플레이스 홀더place holder라고 부릅니다)를 사용해 변수를 넣고, 아래와 같이 따옴표와 더하기 기호를 빼고 쓸 수 있습니다.
익숙해진다면, 같은 문자열이어도 더 간단하게 표현하는 것이 가능해지는 것이죠.
좀 더 어렵게 표현하자면, 내장된 표현식을 사용하는 것을 허용하며 여러 줄로 이루어진 문자열과 문자를 연결해 줄바꿈 기호 없이 쓸 수 있습니다.

console.log(`${language} 처음이죠? Hello World ${language} 참 쉽죠?`);
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
변수 스코프 (교재 560page 참고) 
스코프란? : 변수를 선언하고 사용할 때 적용되는 범위를 스코프라고 한다. 변수가 어디까지 적용되는 범위를 가리키는 영역이 필요.
- var (예약어) 
- let 과 const를 사용한 변수 특징
결론 : 함수 안에서는 var를 쓰고 let은 전역에서 써라.  


